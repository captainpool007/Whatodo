{"version":3,"sources":["reducers/InitialState.js","reducers/Todos.js","actions/AddItem.js","actions/CancelEditItem.js","actions/DeleteItem.js","actions/EditItem.js","actions/ItemCompletion.js","actions/SelectEditItem.js","actions/ReorderItem.js","reducers/LocalStorage.js","actions/LoadStateLocalStorage.js","constants.js","actions/SaveStateLocalStorage.js","reducers/index.js","registerServiceWorker.js","components/Header/Header.js","components/Form/Form.js","containers/FormContainer.js","components/FormEdit/FormEdit.js","containers/FormEditContainer.js","components/PropertyBar/PropertyBar.js","containers/PropertyBarContainer.js","components/Checkout/Checkout.js","components/FormItem/FormItem.js","containers/FormItemContainer.js","components/Content/Content.js","containers/ContentContainer.js","components/Footer/Footer.js","components/Layout/App.js","containers/AppContainer.js","index.js"],"names":["initialState","items","editingItem","TodosReducer","state","action","type","id","uuid","todoItem","value","payload","completed","length","filter","map","item","modifiedItem","newItem","find","clone","splice","initialPosition","removed","newPosition","LocalStorageReducer","localStorageState","JSON","parse","window","localStorage","getItem","removeItem","setItem","stringify","AppReducer","reduceReducers","InitialState","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","Header","className","icon","faListAlt","size","alt","Form","handleAddItem","useState","itemValue","setItemValue","method","autoComplete","onSubmit","ev","preventDefault","name","placeholder","aria-label","onChange","target","autoFocus","data-testid","disabled","faPlus","mapDispatchToProps","connect","props","FormEdit","useEffect","addEventListener","handleKeyUp","removeEventListener","code","handleCancelEditItem","handleEditItem","faCheck","onClick","faTimes","PropertyBar","handleSelectEditItem","faEdit","handleDeleteItem","faTrash","selectedItemId","Checkout","isCompleted","faCheckSquare","faSquare","FormItem","displayMenu","setDisplayMenu","updateDisplayMenu","bool","liClass","onMouseOver","onMouseLeave","handleItemCompletion","Content","onDragEnd","result","destination","handleReorderItem","source","index","droppableId","provided","ref","innerRef","key","draggableId","draggableProps","dragHandleProps","Footer","href","rel","App","handleLoadStateLocalStorage","handleSaveStateLocalStorage","isLocalStorageLoaded","setIsLocalStorageLoaded","previousItemsLength","useRef","current","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.0b135a4f.chunk.js","sourcesContent":["const initialState = {\n  items: [],\n  editingItem: {},\n};\n\nexport default initialState;\n","import uuid from 'uuid/v1';\n\nimport { ADD_ITEM } from '../actions/AddItem';\nimport { CANCEL_EDIT_ITEM } from '../actions/CancelEditItem';\nimport { DELETE_ITEM } from '../actions/DeleteItem';\nimport { EDIT_ITEM } from '../actions/EditItem';\nimport { ITEM_COMPLETION } from '../actions/ItemCompletion';\nimport { SELECT_EDIT_ITEM } from '../actions/SelectEditItem';\nimport { REORDER_ITEM } from '../actions/ReorderItem';\n\nconst TodosReducer = (state, action) => {\n  switch (action.type) {\n    case ADD_ITEM: {\n      const id = uuid();\n      const todoItem = {\n        value: action.payload.value,\n        id,\n        completed: false,\n      };\n\n      return { ...state, items: [...state.items, todoItem] };\n    }\n\n    case CANCEL_EDIT_ITEM: {\n      const newState = state.items.length ? { ...state, editingItem: {} } : { ...state };\n      return newState;\n    }\n\n    case DELETE_ITEM: {\n      const items = state.items.filter(({ id }) => id !== action.payload.id);\n      return { ...state, items };\n    }\n\n    case EDIT_ITEM: {\n      const items = state.items.map(item => {\n        if (item.id === action.payload.modifiedItem.id) {\n          item.value = action.payload.modifiedItem.value;\n        }\n\n        return item;\n      });\n\n      return { ...state, items, editingItem: {} };\n    }\n\n    case ITEM_COMPLETION: {\n      const items = state.items.map(item => {\n        if (item.id === action.payload.modifiedItem.id) {\n          const newItem = { ...item };\n          newItem.completed = !newItem.completed;\n          return newItem;\n        }\n\n        return item;\n      });\n\n      return { ...state, items };\n    }\n\n    case SELECT_EDIT_ITEM: {\n      const item = state.items.find(({ id }) => id === action.payload.id);\n      return { ...state, editingItem: item };\n    }\n\n    case REORDER_ITEM: {\n      const clone = [...state.items];\n      const [removed] = clone.splice(action.payload.initialPosition, 1);\n      clone.splice(action.payload.newPosition, 0, removed);\n\n      return { ...state, items: clone };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default TodosReducer;\n","export const ADD_ITEM = 'Add item';\n\nexport const AddItem = itemValue => ({\n  type: ADD_ITEM,\n  payload: { value: itemValue },\n});\n","export const CANCEL_EDIT_ITEM = 'Cancel edit item';\n\nexport const CancelEditItem = () => ({\n  type: CANCEL_EDIT_ITEM,\n  payload: {},\n});\n","export const DELETE_ITEM = 'Delete item';\n\nexport const DeleteItem = selectedItemId => ({\n  type: DELETE_ITEM,\n  payload: { id: selectedItemId },\n});\n","export const EDIT_ITEM = 'Edit item';\n\nexport const EditItem = modifiedItem => ({\n  type: EDIT_ITEM,\n  payload: { modifiedItem },\n});\n","export const ITEM_COMPLETION = 'Item completion';\n\nexport const ItemCompletion = modifiedItem => ({\n  type: ITEM_COMPLETION,\n  payload: { modifiedItem },\n});\n","export const SELECT_EDIT_ITEM = 'Select edit item';\n\nexport const SelectEditItem = id => ({\n  type: SELECT_EDIT_ITEM,\n  payload: { id },\n});\n","export const REORDER_ITEM = 'Reorder item';\n\nexport const ReorderItem = (initialPosition, newPosition) => ({\n  type: REORDER_ITEM,\n  payload: { initialPosition, newPosition },\n});\n","import { LOCALSTORAGE_NAME } from '../constants';\n\nimport { LOAD_STATE_LOCALSTORAGE } from '../actions/LoadStateLocalStorage';\nimport { SAVE_STATE_LOCALSTORAGE } from '../actions/SaveStateLocalStorage';\n\nconst LocalStorageReducer = (state, action) => {\n  switch (action.type) {\n    case LOAD_STATE_LOCALSTORAGE: {\n      const localStorageState = JSON.parse(window.localStorage.getItem(LOCALSTORAGE_NAME));\n\n      if (localStorageState) {\n        return { ...state, items: localStorageState };\n      }\n      return state;\n    }\n\n    case SAVE_STATE_LOCALSTORAGE: {\n      if (action.payload.state.length === 0) {\n        window.localStorage.removeItem(LOCALSTORAGE_NAME);\n      } else {\n        window.localStorage.setItem(LOCALSTORAGE_NAME, JSON.stringify(action.payload.state));\n      }\n\n      return state;\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default LocalStorageReducer;\n","export const LOAD_STATE_LOCALSTORAGE = 'Load state from LocalStorage';\n\nexport const LoadStateLocalStorage = () => ({\n  type: LOAD_STATE_LOCALSTORAGE,\n  payload: {},\n});\n","// Localstorage name used by the application.\nexport const LOCALSTORAGE_NAME = 'jata-state';\n","export const SAVE_STATE_LOCALSTORAGE = 'Saving state to Local Storage';\n\nexport const SaveStateLocalStorage = state => ({\n  type: SAVE_STATE_LOCALSTORAGE,\n  payload: { state },\n});\n","import reduceReducers from 'reduce-reducers';\n\nimport InitialState from './InitialState';\nimport TodosReducer from './Todos';\nimport LocalStorageReducer from './LocalStorage';\n\nconst AppReducer = reduceReducers(InitialState, LocalStorageReducer, TodosReducer);\n\nexport default AppReducer;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ',\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (response.status === 404 || response.headers.get('content-type').indexOf('javascript') === -1) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faListAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './Header.css';\n\nconst headerPropTypes = {\n  className: PropTypes.string,\n};\n\nconst Header = ({ className }) => (\n  <div className={className}>\n    <div className=\"header__container\">\n      <nav className=\"navbar\">\n        <span className=\"header__span navbar-brand\">\n          <FontAwesomeIcon className=\"d-inline-block\" icon={faListAlt} size=\"lg\" alt=\"List emoji\" />\n        </span>\n        <span className=\"header__span\">WHAtodo</span>\n      </nav>\n    </div>\n  </div>\n);\n\nHeader.propTypes = headerPropTypes;\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\nconst formPropTypes = {\n  handleAddItem: PropTypes.func.isRequired,\n};\n\nconst Form = ({ handleAddItem }) => {\n  const [itemValue, setItemValue] = useState('');\n\n  const handleSubmitAndResetForm = ev => {\n    ev.preventDefault();\n\n    handleAddItem(itemValue);\n\n    // Reset value\n    setItemValue('');\n  };\n\n  const handleItemChange = ev => setItemValue(ev.target.value);\n\n  return (\n    <div>\n      <form method=\"POST\" autoComplete=\"on\" onSubmit={handleSubmitAndResetForm}>\n        <div className=\"form-row\">\n          <div className=\"col\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"new-todo-item\"\n              name=\"new-todo-item\"\n              placeholder=\"I want to do...\"\n              aria-label=\"Todo item description\"\n              value={itemValue}\n              onChange={handleItemChange}\n              autoFocus\n            />\n          </div>\n\n          <div className=\"col-auto\">\n            <button\n              type=\"submit\"\n              data-testid=\"form-submit\"\n              className=\"btn btn-primary\"\n              disabled={!itemValue}\n              aria-label=\"Add todo item\">\n              <FontAwesomeIcon icon={faPlus} />\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nForm.propTypes = formPropTypes;\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Form from '../components/Form/Form';\n\nimport { AddItem } from '../actions/AddItem';\n\nconst formPropTypes = {\n  handleAddItem: PropTypes.func.isRequired,\n};\n\nconst FormContainer = props => <Form {...props} />;\n\nFormContainer.propTypes = formPropTypes;\n\nconst mapDispatchToProps = {\n  handleAddItem: AddItem,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(FormContainer);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nimport './FormEdit.css';\n\nconst formEditPropTypes = {\n  item: PropTypes.shape({\n    value: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleEditItem: PropTypes.func.isRequired,\n  handleCancelEditItem: PropTypes.func.isRequired,\n};\n\nconst FormEdit = props => {\n  const [itemValue, setItemValue] = useState(props.item.value);\n\n  useEffect(() => {\n    window.addEventListener('keyup', handleKeyUp);\n\n    return () => {\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  });\n\n  const handleKeyUp = ev => {\n    // Handle ESC Key interaction\n    if (ev.code === 'Escape') {\n      props.handleCancelEditItem(ev);\n    }\n  };\n\n  const handleItemChange = ev => setItemValue(ev.target.value);\n\n  const handleEditAndResetForm = ev => {\n    ev.preventDefault();\n\n    props.handleEditItem({\n      ...props.item,\n      value: itemValue,\n    });\n\n    // Reset value\n    setItemValue('');\n  };\n\n  return (\n    <li className=\"form_edit__component list-group-item\">\n      <form method=\"POST\" onSubmit={handleEditAndResetForm}>\n        <div className=\"form-row\">\n          <div className=\"col\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"input-edit-todo-item\"\n              name=\"edit-todo-item\"\n              value={itemValue}\n              onChange={handleItemChange}\n              autoFocus\n            />\n          </div>\n\n          <div className=\"col-auto\">\n            <button\n              data-testid=\"form-edit-submit-button\"\n              type=\"submit\"\n              id=\"submit-edit-todo-item\"\n              className=\"btn btn-primary form_edit__button--first\"\n              disabled={!itemValue}>\n              <FontAwesomeIcon icon={faCheck} />\n            </button>\n            <button\n              data-testid=\"form-edit-cancel-edit-button\"\n              id=\"cancel-edit-todo-item\"\n              type=\"button\"\n              className=\"btn btn-danger\"\n              onClick={props.handleCancelEditItem}>\n              <FontAwesomeIcon icon={faTimes} />\n            </button>\n          </div>\n        </div>\n      </form>\n    </li>\n  );\n};\n\nFormEdit.propTypes = formEditPropTypes;\n\nexport default FormEdit;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport FormEdit from '../components/FormEdit/FormEdit';\n\nimport { CancelEditItem } from '../actions/CancelEditItem';\nimport { EditItem } from '../actions/EditItem';\n\nconst formEditPropTypes = {\n  item: PropTypes.shape({\n    value: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleEditItem: PropTypes.func.isRequired,\n  handleCancelEditItem: PropTypes.func.isRequired,\n};\n\nconst FormEditContainer = props => <FormEdit {...props} />;\n\nFormEditContainer.propTypes = formEditPropTypes;\n\nconst mapDispatchToProps = {\n  handleCancelEditItem: CancelEditItem,\n  handleEditItem: EditItem,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(FormEditContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\n\nimport './PropertyBar.css';\n\nconst propertyBarPropTypes = {\n  id: PropTypes.string.isRequired,\n  handleDeleteItem: PropTypes.func.isRequired,\n  handleSelectEditItem: PropTypes.func.isRequired,\n};\n\nconst PropertyBar = props => (\n  <div className=\"property_bar__component\">\n    <button\n      data-testid=\"property-bar-edit-button\"\n      className=\"btn btn-secondary property_bar__button\"\n      onClick={() => props.handleSelectEditItem(props.id)}>\n      <FontAwesomeIcon icon={faEdit} size=\"sm\" />\n    </button>\n    <button\n      data-testid=\"property-bar-delete-button\"\n      className=\"btn btn-danger property_bar__button\"\n      onClick={() => props.handleDeleteItem(props.id)}>\n      <FontAwesomeIcon icon={faTrash} size=\"sm\" />\n    </button>\n  </div>\n);\n\nPropertyBar.propTypes = propertyBarPropTypes;\n\nexport default PropertyBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport PropertyBar from '../components/PropertyBar/PropertyBar';\n\nimport { DeleteItem } from '../actions/DeleteItem';\nimport { SelectEditItem } from '../actions/SelectEditItem';\n\nconst propertyBarPropTypes = {\n  id: PropTypes.string.isRequired,\n  handleDeleteItem: PropTypes.func.isRequired,\n  handleSelectEditItem: PropTypes.func.isRequired,\n};\n\nconst PropertyBarContainer = props => <PropertyBar {...props} />;\n\nPropertyBarContainer.propTypes = propertyBarPropTypes;\n\nconst mapDispatchToProps = {\n  handleDeleteItem: DeleteItem,\n  handleSelectEditItem: SelectEditItem,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(PropertyBarContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSquare, faCheckSquare } from '@fortawesome/free-solid-svg-icons';\n\nconst checkoutPropTypes = {\n  isCompleted: PropTypes.bool.isRequired,\n};\n\nconst Checkout = props => (\n  <span>\n    {props.isCompleted ? (\n      <FontAwesomeIcon icon={faCheckSquare} size=\"2x\" />\n    ) : (\n      <FontAwesomeIcon icon={faSquare} size=\"2x\" />\n    )}\n  </span>\n);\n\nCheckout.propTypes = checkoutPropTypes;\n\nexport default Checkout;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './FormItem.css';\n\nimport PropertyBarContainer from '../../containers/PropertyBarContainer';\nimport Checkout from '../Checkout/Checkout';\n\nconst formItemPropTypes = {\n  item: PropTypes.shape({\n    value: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleItemCompletion: PropTypes.func.isRequired,\n};\n\nconst FormItem = props => {\n  const [displayMenu, setDisplayMenu] = useState(false);\n\n  const updateDisplayMenu = bool => {\n    if (displayMenu !== bool) {\n      setDisplayMenu(bool);\n    }\n  };\n\n  let liClass = 'form_item__component list-group-item form-control';\n  liClass = props.item.completed ? liClass + ' form_item__component-completed' : liClass;\n\n  return (\n    <li\n      data-testid=\"form-item-listitem\"\n      className={liClass}\n      onMouseOver={() => updateDisplayMenu(true)}\n      onMouseLeave={() => updateDisplayMenu(false)}>\n      <div\n        className=\"text-truncate\"\n        data-testid=\"form-item-item-completion\"\n        onClick={() => props.handleItemCompletion(props.item)}>\n        <div className=\"form_item__checkout d-inline-block\">\n          <Checkout isCompleted={props.item.completed} />\n        </div>\n        <span className=\"form_item__text\">{props.item.value}</span>\n      </div>\n\n      {displayMenu ? <PropertyBarContainer id={props.item.id} /> : null}\n    </li>\n  );\n};\n\nFormItem.propTypes = formItemPropTypes;\n\nexport default FormItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport FormItem from '../components/FormItem/FormItem';\n\nimport { ItemCompletion } from '../actions/ItemCompletion';\n\nconst formItemPropTypes = {\n  item: PropTypes.shape({\n    value: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleItemCompletion: PropTypes.func.isRequired,\n};\n\nconst FormItemContainer = props => <FormItem {...props} />;\n\nFormItemContainer.propTypes = formItemPropTypes;\n\nconst mapDispatchToProps = {\n  handleItemCompletion: ItemCompletion,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(FormItemContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport FormContainer from '../../containers/FormContainer';\nimport FormEditContainer from '../../containers/FormEditContainer';\nimport FormItemContainer from '../../containers/FormItemContainer';\n\nimport './Content.css';\n\nconst contentPropTypes = {\n  className: PropTypes.string,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n  editingItem: PropTypes.shape({\n    value: PropTypes.string,\n    id: PropTypes.string,\n    completed: PropTypes.bool,\n  }).isRequired,\n  handleReorderItem: PropTypes.func.isRequired,\n};\n\nconst Content = props => {\n  const onDragEnd = result => {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    props.handleReorderItem(result.source.index, result.destination.index);\n  };\n\n  return (\n    <div className={props.className}>\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-12 col-md-9 col-lg-7 col-xl-6\">\n            <div className=\"card text-center\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Welcome!</h5>\n                <p className=\"card-text\">To get started, add some items to your list:</p>\n                <div className=\"d-inline-block\">\n                  <FormContainer />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {props.items.length ? (\n          <div className=\"row justify-content-center\">\n            <div className=\"col-12 col-md-9 col-lg-7 col-xl-6\">\n              <div className=\"content__todos\">\n                <ul className=\"list-group content__todos__ul\">\n                  <DragDropContext onDragEnd={onDragEnd}>\n                    <Droppable droppableId=\"droppable\">\n                      {provided => (\n                        <div ref={provided.innerRef}>\n                          {props.items.map((item, index) => (\n                            <Draggable key={item.id} draggableId={item.id} index={index}>\n                              {provided => (\n                                <div\n                                  ref={provided.innerRef}\n                                  data-testid=\"content-draggable-item\"\n                                  {...provided.draggableProps}\n                                  {...provided.dragHandleProps}\n                                  className=\"content__todos__li\">\n                                  {props.editingItem.id === item.id ? (\n                                    <FormEditContainer item={item} />\n                                  ) : (\n                                    <FormItemContainer item={item} />\n                                  )}\n                                </div>\n                              )}\n                            </Draggable>\n                          ))}\n                          {provided.placeholder}\n                        </div>\n                      )}\n                    </Droppable>\n                  </DragDropContext>\n                </ul>\n              </div>\n            </div>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nContent.propTypes = contentPropTypes;\n\nexport default Content;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Content from '../components/Content/Content';\n\nimport { ReorderItem } from '../actions/ReorderItem';\n\nconst contentPropTypes = {\n  className: PropTypes.string,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n  editingItem: PropTypes.shape({\n    value: PropTypes.string,\n    id: PropTypes.string,\n    completed: PropTypes.bool,\n  }).isRequired,\n  handleReorderItem: PropTypes.func.isRequired,\n};\n\nconst ContentContainer = props => <Content {...props} />;\n\nContentContainer.propTypes = contentPropTypes;\n\nconst mapStateToProps = state => ({\n  items: state.items,\n  editingItem: state.editingItem,\n});\n\nconst mapDispatchToProps = {\n  handleReorderItem: ReorderItem,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ContentContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Footer.css';\n\nconst footerPropTypes = {\n  className: PropTypes.string,\n};\n\nconst Footer = ({ className }) => (\n  <div className={className}>\n    <div className=\"footer__container\">\n      <p className=\"footer__p\">\n        Made using React + Redux -{' '}\n        <a href=\"https://github.com/captainpool007\" rel=\"noopener noreferrer\" target=\"_blank\">\n          @captainpool007\n        </a>\n      </p>\n    </div>\n  </div>\n);\n\nFooter.propTypes = footerPropTypes;\n\nexport default Footer;\n","import React from 'react';\n\nimport './App.css';\n\nimport Header from '../Header/Header';\nimport ContentContainer from '../../containers/ContentContainer';\nimport Footer from '../Footer/Footer';\n\nconst App = () => (\n  <div className=\"app__container\">\n    <Header className=\"app__header\" />\n    <ContentContainer className=\"app__content\" />\n    <Footer className=\"app__footer\" />\n  </div>\n);\n\nexport default App;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport App from '../components/Layout/App';\n\nimport { LoadStateLocalStorage } from '../actions/LoadStateLocalStorage';\nimport { SaveStateLocalStorage } from '../actions/SaveStateLocalStorage';\n\nconst appPropTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n  handleLoadStateLocalStorage: PropTypes.func.isRequired,\n  handleSaveStateLocalStorage: PropTypes.func.isRequired,\n};\n\nconst AppContainer = props => {\n  const { handleLoadStateLocalStorage, handleSaveStateLocalStorage, items } = props;\n  const [isLocalStorageLoaded, setIsLocalStorageLoaded] = useState(false);\n  const previousItemsLength = useRef(null);\n\n  useEffect(() => {\n    handleLoadStateLocalStorage();\n    setIsLocalStorageLoaded(true);\n  }, [handleLoadStateLocalStorage]);\n\n  useEffect(() => {\n    if (isLocalStorageLoaded) {\n      if (!previousItemsLength.current) {\n        previousItemsLength.current = -1;\n        return;\n      }\n\n      if (items.length !== previousItemsLength.current) {\n        handleSaveStateLocalStorage(items);\n        if (items.length === 0) {\n          previousItemsLength.current = -1;\n        } else {\n          previousItemsLength.current = items.length;\n        }\n      }\n    }\n  }, [handleSaveStateLocalStorage, items, isLocalStorageLoaded]);\n\n  return <App />;\n};\n\nAppContainer.propTypes = appPropTypes;\n\nconst mapStateToProps = state => ({\n  items: state.items,\n});\n\nconst mapDispatchToProps = {\n  handleLoadStateLocalStorage: LoadStateLocalStorage,\n  handleSaveStateLocalStorage: SaveStateLocalStorage,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AppContainer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport AppReducer from './reducers';\nimport registerServiceWorker from './registerServiceWorker';\n\n// Third-party declarations.\nimport 'bootswatch/dist/flatly/bootstrap.min.css';\n\n// Application-wide CSS definitions.\nimport './stylesheets/index.css';\nimport './stylesheets/animations.css';\n\nimport AppContainer from './containers/AppContainer';\n\nconst store = createStore(\n  AppReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById('app'),\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}